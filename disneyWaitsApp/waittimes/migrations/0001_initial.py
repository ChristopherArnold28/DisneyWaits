# Generated by Django 2.1.1 on 2018-09-25 19:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Metrics',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('value', models.FloatField(blank=True, db_column='Value', null=True)),
            ],
            options={
                'db_table': 'Metrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Park',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('openingdate', models.TextField(blank=True, db_column='OpeningDate', null=True)),
            ],
            options={
                'db_table': 'Park',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parkhours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.TextField(blank=True, db_column='Date', null=True)),
                ('parkopen', models.TextField(blank=True, db_column='ParkOpen', null=True)),
                ('parkclose', models.TextField(blank=True, db_column='ParkClose', null=True)),
                ('emhopen', models.TextField(blank=True, db_column='EMHOpen', null=True)),
                ('emhclose', models.TextField(blank=True, db_column='EMHClose', null=True)),
            ],
            options={
                'db_table': 'ParkHours',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('openingdate', models.TextField(blank=True, db_column='OpeningDate', null=True)),
                ('tier', models.TextField(blank=True, db_column='Tier', null=True)),
                ('location', models.TextField(db_column='Location')),
                ('intellectualprop', models.CharField(blank=True, db_column='IntellectualProp', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Ride',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RideWaits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_column='Date')),
                ('time', models.TextField(db_column='Time')),
                ('wait', models.IntegerField(db_column='Wait')),
            ],
            options={
                'db_table': 'Ride_Waits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(db_column='Date', max_length=45)),
                ('time', models.TextField(db_column='Time')),
                ('status', models.TextField(db_column='Status')),
                ('temperature', models.FloatField(db_column='Temperature')),
                ('cloudcover', models.FloatField(db_column='CloudCover')),
                ('simplestatus', models.TextField(db_column='SimpleStatus')),
                ('rainaccumulation', models.FloatField(db_column='RainAccumulation')),
                ('location', models.CharField(db_column='Location', max_length=45)),
            ],
            options={
                'db_table': 'Weather',
                'managed': False,
            },
        ),
    ]
